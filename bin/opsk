#!/usr/bin/env ruby

require 'rubygems'
require 'thor'
require 'thor/group'

module  Opsk 
  class Generate < Thor::Group
    include Thor::Actions

    argument :name, :type => :string, :desc => "project name"
    argument :box, :type => :string, :desc => "Vagrant box type"

    desc "Generate a Vagrant, Puppet librarian and fpm project"


    def self.source_root
	# during dev time
	if(File.dirname(__FILE__) == './bin')
	  File.dirname('.')
	else 
	  "#{File.dirname(__FILE__)}/../"
	end
    end

    def path 
	"#{name}-sandbox"
    end

    def create_vagrant_file
	empty_directory(path)
	template('templates/vagrant.erb', "#{path}/Vagrantfile")
    end

    def create_git_ignore
	copy_file('templates/gitignore', "#{path}/.gitignore")
    end

    def create_gemfile
	copy_file('templates/gemfile', "#{path}/Gemfile")
    end

    def create_rvmrc
	template('templates/rvmrc.erb', "#{path}/.rvmrc")
    end

    def create_puppet_base
	empty_directory("#{path}/static-modules/")
	empty_directory("#{path}/manifests/")
	template('templates/puppetfile.erb', "#{path}/Puppetfile")
	template('templates/default.erb', "#{path}/manifests/default.pp")
	copy_file('templates/run.sh', "#{path}/run.sh")
    end

    def readme
	template('templates/README.erb', "#{path}/README.md")
    end
  end
end


module Opsk
  class Root < Thor
    register Opsk::Generate, 'generate', 'generate [name] [box]', 'generates opskelaton project structure'
  end 
end

Opsk::Root.start ARGV
